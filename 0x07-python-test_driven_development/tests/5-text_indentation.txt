===============================================
How to Use 5-text_indentation.py
===============================================

This module defines a function called `text_indentation(text)` that performs text indentation.

Usage
=====

The `text_indentation(text)` function takes a `text` parameter and prints the text with specific indentation rules.

Example:
--------
>>> text_indentation = __import__('5-text_indentation').text_indentation
>>> text_indentation("Hello?")
Hello?

The function prints two new lines after each occurrence of the characters '.', '?', and ':'.

Example:
--------
>>> text_indentation("Hello.")
Hello.

The function does not print any spaces at the beginning of a line.

Example:
--------
>>> text_indentation("   Hi there.")
Hi there.

The function does not print any spaces at the end of each printed line.

Example:
--------
>>> text_indentation("Hello.   ")
Hello.

The function handles new lines within the text as normal.

Example:
--------
>>> text_indentation("Let's print a new-line! Here goes:\nPrinted.")
Let's print a new-line! Here goes:

Printed.

The function applies the indentation rules to multiple lines of text.

Example:
--------
>>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing elit."
...                  " Quonam modo?")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.

Quonam modo?

Invalid Text
============

If the `text` parameter is not a string, a `TypeError` is raised.

Example:
--------
>>> text_indentation(7)
Traceback (most recent call last):
  TypeError: text must be a string

Example:
--------
>>> text_indentation({"one": 1, "two": 2})
Traceback (most recent call last):
  TypeError: text must be a string

Example:
--------
>>> text_indentation(None)
Traceback (most recent call last):
  TypeError: text must be a string
